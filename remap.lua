-- Functional wrapper for map('n', 'ping custom keybindings
local map = require("zaplachi.utils").map

map("i", "jj", "<Esc>")

map('n', '<Leader>ne', '<C-W><Right><CR>')
map('n', '<Leader>th', '<C-W><Left><CR>')

map("n", "<C-Up>", ":resize -2<CR>", opts)
map("n", "<C-Down>", ":resize +2<CR>", opts)
map("n", "<C-Left>", ":vertical resize -2<CR>", opts)
map("n", "<C-Right>", ":vertical resize +2<CR>", opts)


map('n', '<Leader>w', ':w<CR>')
map('n', '<Leader>wq', ':wq<CR>:qall<CR>')
map('n', '<Leader>fq', ':q!<CR>')
map('n', '<Leader>fs', ':Ex<CR>')
map('n', '<Leader>fm', ':lua vim.lsp.buf.format({async = true})<CR>')
map('n', '<Leader>nt', ':NERDTree<CR>')
map('n', '<Leader>tb', ':TagbarToggle<CR>')
map('n', '<Leader>lsp', ':Mason<CR>')
map('n', '<Leader>ps', ':w<CR>:so<CR>:PackerSync<CR>')
map('n', '<Leader>vbg', ':VimBeGood<CR>')

-- Workman remap
map('n', 'l', 'o')
map('n', 'o', 'l')
map('n', 'L', 'O')
map('n', 'O', 'L')
map('n', 'j', 'n')
map('n', 'n', 'j')
map('n', 'J', 'N')
map('n', 'N', 'J')
map('n', 'gn', 'gj')
map('n', 'gj', 'gn')
map('n', 'k', 'e')
map('n', 'e', 'k')
map('n', 'K', 'E')
map('n', 'E', '<nop>')
map('n', 'gk', 'ge')
map('n', 'ge', 'gk')
map('n', 'h', 'y')
map('o', 'h', 'y')
map('n', 'y', 'h')
map('n', 'H', 'Y')

map('v', 'Y', 'H')
map('v', 'l', 'o')
map('v', 'o', 'l')
map('v', 'L', 'O')
map('v', 'O', 'L')
map('v', 'j', 'n')
map('v', 'n', 'j')
map('v', 'J', 'N')
map('v', 'N', 'J')
map('v', 'gn', 'gj')
map('v', 'gj', 'gn')
map('v', 'k', 'e')
map('v', 'e', 'k')
map('v', 'K', 'E')
map('v', 'E', '<nop>')
map('v', 'gk', 'ge')
map('v', 'ge', 'gk')
map('v', 'h', 'y')
map('v', 'y', 'h')
map('v', 'H', 'Y')
map('v', 'Y', 'H')
